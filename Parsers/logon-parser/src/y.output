Terminals unused in grammar

   SEN_GRAMMAR
   STRING


Grammar

    0 $accept: start $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 start: SENT LEFT_PAREN $@1 ROOT $@2 sen_grammar RIGHT_PAREN

    4 sen_grammar: sen_grammar1
    5            | sen_grammar sen_grammar1

    6 $@3: /* empty */

    7 sen_grammar1: LEFT_PAREN $@3 sen_grammar RIGHT_PAREN

    8 $@4: /* empty */

    9 $@5: /* empty */

   10 sen_grammar1: ID $@4 SEN_GRM $@5 ID ID ID

   11 $@6: /* empty */

   12 $@7: /* empty */

   13 sen_grammar1: ID $@6 LEX_GRM $@7 ID ID ID

   14 $@8: /* empty */

   15 $@9: /* empty */

   16 sen_grammar1: TOKEN $@8 ID $@9 token_grammar1

   17 $@10: /* empty */

   18 sen_grammar1: ID $@10 token_grammar1

   19 token_grammar1: /* empty */

   20 $@11: /* empty */

   21 token_grammar1: CARG $@11 token_grammar1

   22 $@12: /* empty */

   23 token_grammar1: CLASS $@12 token_grammar1

   24 $@13: /* empty */

   25 token_grammar1: CASE $@13 token_grammar1

   26 $@14: /* empty */

   27 token_grammar1: FORM $@14 token_grammar1

   28 $@15: /* empty */

   29 token_grammar1: TAG $@15 token_grammar1

   30 $@16: /* empty */

   31 token_grammar1: PRBS $@16 token_grammar1


Terminals, with rules where they appear

$end (0) 0
error (256)
SENT (258) 3
LEFT_PAREN (259) 3 7
ROOT (260) 3
SEN_GRAMMAR (261)
TOKEN (262) 16
STRING (263)
RIGHT_PAREN (264) 3 7
ID (265) 10 13 16 18
SEN_GRM (266) 10
LEX_GRM (267) 13
CARG (268) 21
CLASS (269) 23
CASE (270) 25
FORM (271) 27
TAG (272) 29
PRBS (273) 31


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
start (20)
    on left: 3, on right: 0
$@1 (21)
    on left: 1, on right: 3
$@2 (22)
    on left: 2, on right: 3
sen_grammar (23)
    on left: 4 5, on right: 3 5 7
sen_grammar1 (24)
    on left: 7 10 13 16 18, on right: 4 5
$@3 (25)
    on left: 6, on right: 7
$@4 (26)
    on left: 8, on right: 10
$@5 (27)
    on left: 9, on right: 10
$@6 (28)
    on left: 11, on right: 13
$@7 (29)
    on left: 12, on right: 13
$@8 (30)
    on left: 14, on right: 16
$@9 (31)
    on left: 15, on right: 16
$@10 (32)
    on left: 17, on right: 18
token_grammar1 (33)
    on left: 19 21 23 25 27 29 31, on right: 16 18 21 23 25 27 29 31
$@11 (34)
    on left: 20, on right: 21
$@12 (35)
    on left: 22, on right: 23
$@13 (36)
    on left: 24, on right: 25
$@14 (37)
    on left: 26, on right: 27
$@15 (38)
    on left: 28, on right: 29
$@16 (39)
    on left: 30, on right: 31


state 0

    0 $accept: . start $end

    SENT  shift, and go to state 1

    start  go to state 2


state 1

    3 start: SENT . LEFT_PAREN $@1 ROOT $@2 sen_grammar RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 3


state 2

    0 $accept: start . $end

    $end  shift, and go to state 4


state 3

    3 start: SENT LEFT_PAREN . $@1 ROOT $@2 sen_grammar RIGHT_PAREN

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: start $end .

    $default  accept


state 5

    3 start: SENT LEFT_PAREN $@1 . ROOT $@2 sen_grammar RIGHT_PAREN

    ROOT  shift, and go to state 6


state 6

    3 start: SENT LEFT_PAREN $@1 ROOT . $@2 sen_grammar RIGHT_PAREN

    $default  reduce using rule 2 ($@2)

    $@2  go to state 7


state 7

    3 start: SENT LEFT_PAREN $@1 ROOT $@2 . sen_grammar RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 8
    TOKEN       shift, and go to state 9
    ID          shift, and go to state 10

    sen_grammar   go to state 11
    sen_grammar1  go to state 12


state 8

    7 sen_grammar1: LEFT_PAREN . $@3 sen_grammar RIGHT_PAREN

    $default  reduce using rule 6 ($@3)

    $@3  go to state 13


state 9

   16 sen_grammar1: TOKEN . $@8 ID $@9 token_grammar1

    $default  reduce using rule 14 ($@8)

    $@8  go to state 14


state 10

   10 sen_grammar1: ID . $@4 SEN_GRM $@5 ID ID ID
   13             | ID . $@6 LEX_GRM $@7 ID ID ID
   18             | ID . $@10 token_grammar1

    SEN_GRM   reduce using rule 8 ($@4)
    LEX_GRM   reduce using rule 11 ($@6)
    $default  reduce using rule 17 ($@10)

    $@4   go to state 15
    $@6   go to state 16
    $@10  go to state 17


state 11

    3 start: SENT LEFT_PAREN $@1 ROOT $@2 sen_grammar . RIGHT_PAREN
    5 sen_grammar: sen_grammar . sen_grammar1

    LEFT_PAREN   shift, and go to state 8
    TOKEN        shift, and go to state 9
    RIGHT_PAREN  shift, and go to state 18
    ID           shift, and go to state 10

    sen_grammar1  go to state 19


state 12

    4 sen_grammar: sen_grammar1 .

    $default  reduce using rule 4 (sen_grammar)


state 13

    7 sen_grammar1: LEFT_PAREN $@3 . sen_grammar RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 8
    TOKEN       shift, and go to state 9
    ID          shift, and go to state 10

    sen_grammar   go to state 20
    sen_grammar1  go to state 12


state 14

   16 sen_grammar1: TOKEN $@8 . ID $@9 token_grammar1

    ID  shift, and go to state 21


state 15

   10 sen_grammar1: ID $@4 . SEN_GRM $@5 ID ID ID

    SEN_GRM  shift, and go to state 22


state 16

   13 sen_grammar1: ID $@6 . LEX_GRM $@7 ID ID ID

    LEX_GRM  shift, and go to state 23


state 17

   18 sen_grammar1: ID $@10 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 30


state 18

    3 start: SENT LEFT_PAREN $@1 ROOT $@2 sen_grammar RIGHT_PAREN .

    $default  reduce using rule 3 (start)


state 19

    5 sen_grammar: sen_grammar sen_grammar1 .

    $default  reduce using rule 5 (sen_grammar)


state 20

    5 sen_grammar: sen_grammar . sen_grammar1
    7 sen_grammar1: LEFT_PAREN $@3 sen_grammar . RIGHT_PAREN

    LEFT_PAREN   shift, and go to state 8
    TOKEN        shift, and go to state 9
    RIGHT_PAREN  shift, and go to state 31
    ID           shift, and go to state 10

    sen_grammar1  go to state 19


state 21

   16 sen_grammar1: TOKEN $@8 ID . $@9 token_grammar1

    $default  reduce using rule 15 ($@9)

    $@9  go to state 32


state 22

   10 sen_grammar1: ID $@4 SEN_GRM . $@5 ID ID ID

    $default  reduce using rule 9 ($@5)

    $@5  go to state 33


state 23

   13 sen_grammar1: ID $@6 LEX_GRM . $@7 ID ID ID

    $default  reduce using rule 12 ($@7)

    $@7  go to state 34


state 24

   21 token_grammar1: CARG . $@11 token_grammar1

    $default  reduce using rule 20 ($@11)

    $@11  go to state 35


state 25

   23 token_grammar1: CLASS . $@12 token_grammar1

    $default  reduce using rule 22 ($@12)

    $@12  go to state 36


state 26

   25 token_grammar1: CASE . $@13 token_grammar1

    $default  reduce using rule 24 ($@13)

    $@13  go to state 37


state 27

   27 token_grammar1: FORM . $@14 token_grammar1

    $default  reduce using rule 26 ($@14)

    $@14  go to state 38


state 28

   29 token_grammar1: TAG . $@15 token_grammar1

    $default  reduce using rule 28 ($@15)

    $@15  go to state 39


state 29

   31 token_grammar1: PRBS . $@16 token_grammar1

    $default  reduce using rule 30 ($@16)

    $@16  go to state 40


state 30

   18 sen_grammar1: ID $@10 token_grammar1 .

    $default  reduce using rule 18 (sen_grammar1)


state 31

    7 sen_grammar1: LEFT_PAREN $@3 sen_grammar RIGHT_PAREN .

    $default  reduce using rule 7 (sen_grammar1)


state 32

   16 sen_grammar1: TOKEN $@8 ID $@9 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 41


state 33

   10 sen_grammar1: ID $@4 SEN_GRM $@5 . ID ID ID

    ID  shift, and go to state 42


state 34

   13 sen_grammar1: ID $@6 LEX_GRM $@7 . ID ID ID

    ID  shift, and go to state 43


state 35

   21 token_grammar1: CARG $@11 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 44


state 36

   23 token_grammar1: CLASS $@12 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 45


state 37

   25 token_grammar1: CASE $@13 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 46


state 38

   27 token_grammar1: FORM $@14 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 47


state 39

   29 token_grammar1: TAG $@15 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 48


state 40

   31 token_grammar1: PRBS $@16 . token_grammar1

    CARG   shift, and go to state 24
    CLASS  shift, and go to state 25
    CASE   shift, and go to state 26
    FORM   shift, and go to state 27
    TAG    shift, and go to state 28
    PRBS   shift, and go to state 29

    $default  reduce using rule 19 (token_grammar1)

    token_grammar1  go to state 49


state 41

   16 sen_grammar1: TOKEN $@8 ID $@9 token_grammar1 .

    $default  reduce using rule 16 (sen_grammar1)


state 42

   10 sen_grammar1: ID $@4 SEN_GRM $@5 ID . ID ID

    ID  shift, and go to state 50


state 43

   13 sen_grammar1: ID $@6 LEX_GRM $@7 ID . ID ID

    ID  shift, and go to state 51


state 44

   21 token_grammar1: CARG $@11 token_grammar1 .

    $default  reduce using rule 21 (token_grammar1)


state 45

   23 token_grammar1: CLASS $@12 token_grammar1 .

    $default  reduce using rule 23 (token_grammar1)


state 46

   25 token_grammar1: CASE $@13 token_grammar1 .

    $default  reduce using rule 25 (token_grammar1)


state 47

   27 token_grammar1: FORM $@14 token_grammar1 .

    $default  reduce using rule 27 (token_grammar1)


state 48

   29 token_grammar1: TAG $@15 token_grammar1 .

    $default  reduce using rule 29 (token_grammar1)


state 49

   31 token_grammar1: PRBS $@16 token_grammar1 .

    $default  reduce using rule 31 (token_grammar1)


state 50

   10 sen_grammar1: ID $@4 SEN_GRM $@5 ID ID . ID

    ID  shift, and go to state 52


state 51

   13 sen_grammar1: ID $@6 LEX_GRM $@7 ID ID . ID

    ID  shift, and go to state 53


state 52

   10 sen_grammar1: ID $@4 SEN_GRM $@5 ID ID ID .

    $default  reduce using rule 10 (sen_grammar1)


state 53

   13 sen_grammar1: ID $@6 LEX_GRM $@7 ID ID ID .

    $default  reduce using rule 13 (sen_grammar1)
